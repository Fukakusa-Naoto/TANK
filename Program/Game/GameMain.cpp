//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   GameMain.cpp
//!
//! @brief  ゲーム関連のソースファイル
//!
//! @date   2017.07.31
//!
//! @author GF1.21.深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// ヘッダファイルの読み込み ================================================

#include "GameMain.h"
#include "SceneLogo.h"
#include "SceneTitle.h"
#include "SceneReady.h"
#include "ScenePlaying.h"
#include "SceneResult.h"

//データ型の定義============================================================





//定数の定義================================================================





// グローバル変数の定義 ====================================================

//シーン管理
SceneId g_currentSceneId;	//現在のシーンのID
SceneId g_nextSceneId;	//次のシーンのID

//キーの入力状態
int g_currentInputState;	//現在
int g_lastInputState;	//前回


//関数のプロトタイプ宣言====================================================

//シーン別の初期化処理
void InitializeScene(void);

//シーン別の更新処理
void UpdateScene(void);

//シーン別の描画処理
void RenderScene(void);

//シーン別の終了処理
void FinalizeScene(void);

//シーンの切り替え
void ChangeScene(SceneId nextSceneId);


// 関数の定義 ==============================================================
//----------------------------------------------------------------------
//! @brief ゲームの初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void InitializeGame(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンIDの初期化
	g_currentSceneId = SCENE_NONE;
	g_nextSceneId = SCENE_LOGO;

}



//----------------------------------------------------------------------
//! @brief ゲームの更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void UpdateGame(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//前回のキーの状態を記憶しておく
	g_lastInputState = ~g_currentInputState;

	//キー入力の読み込み
	g_currentInputState = GetJoypadInputState(DX_INPUT_KEY_PAD1);

	//シーンの切り替え
	if (g_nextSceneId != g_currentSceneId)
	{
		FinalizeScene();
		g_currentSceneId = g_nextSceneId;
		InitializeScene();
	}

	//シーン別の更新処理
	UpdateScene();
}



//----------------------------------------------------------------------
//! @brief ゲームの描画処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void RenderGame(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーン別の描画処理
	RenderScene();
}



//----------------------------------------------------------------------
//! @brief ゲームの終了処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void FinalizeGame(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーン別の終了処理
	FinalizeScene();
}



//----------------------------------------------------------------------
//! @brief シーンの変更処理
//!
//! @param[nextSceneId] 次のシーン
//!
//! @return なし
//----------------------------------------------------------------------
void ChangeScene(SceneId nextSceneId)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//次のシーンの予約
	g_nextSceneId = nextSceneId;
}



//----------------------------------------------------------------------
//! @brief シーン別の初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void InitializeScene(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンの切り替え
	switch (g_currentSceneId)
	{
	case SCENE_LOGO:	//ロゴ
		InitializeLogo();
		break;
	case SCENE_TITLE:	//タイトル
		InitializeTitle();
		break;
	case SCENE_READY:	//プレイ前準備
		InitializeReady();
		break;
	case SCENE_PLAYING:	//プレイ
		InitializePlaying();
		break;
	case SCENE_RESULT:	//結果
		InitializeResult();
		break;
	default:
		
		break;
	}

}



//----------------------------------------------------------------------
//! @brief シーン別の更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void UpdateScene(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンの切り替え
	switch (g_currentSceneId)
	{
	case SCENE_LOGO:	//ロゴ
		UpdateLogo();
		break;
	case SCENE_TITLE:	//タイトル
		UpdateTitle();
		break;
	case SCENE_READY:	//プレイ前準備
		UpdateReady();
		break;
	case SCENE_PLAYING:	//プレイ
		UpdatePlaying();
		break;
	case SCENE_RESULT:	//結果
		UpdateResult();
		break;
	default:
		
		break;
	}

}



//----------------------------------------------------------------------
//! @brief シーン別の描画処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void RenderScene(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンの切り替え
	switch (g_currentSceneId)
	{
	case SCENE_LOGO:	//ロゴ
		RenderLogo();
		break;
	case SCENE_TITLE:	//タイトル
		RenderTitle();
		break;
	case SCENE_READY:	//プレイ前準備
		RenderReady();
		break;
	case SCENE_PLAYING:	//プレイ
		RenderPlaying();
		break;
	case SCENE_RESULT:	//結果
		RenderResult();
		break;
	default:
		
		break;
	}

}



//----------------------------------------------------------------------
//! @brief シーン別の終了処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void FinalizeScene(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンの切り替え
	switch (g_currentSceneId)
	{
	case SCENE_LOGO:	//ロゴ
		FinalizeLogo();
		break;
	case SCENE_TITLE:	//タイトル
		FinalizeTitle();
		break;
	case SCENE_READY:	//プレイ前準備
		FinalizeReady();
		break;
	case SCENE_PLAYING:	//プレイ
		FinalizePlaying();
		break;
	case SCENE_RESULT:	//結果
		FinalizeResult();
		break;
	default:
		
		break;
	}

}
