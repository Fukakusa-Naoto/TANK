//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   SceneLogo.cpp
//!
//! @brief  ロゴシーン関連のソースファイル
//!
//! @date   2017.07.31
//!
//! @author GF1.21.深草直斗
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// ヘッダファイルの読み込み ================================================

#include "SceneLogo.h"
#include "GameMain.h"



//データ型の定義============================================================





//定数の定義================================================================

//画像の横幅
#define IMAGE_SIZE_WIDTH (640)

//画像の高さ
#define IMAGE_SIZE_HEIGHT (480)

//画像の倍率
#define IMAGE_EXTEND (0.25f)

//演出速度
#define EFFECT_SPEED (1.0f)

//関数のプロトタイプ宣言====================================================

//シーンの初期化
void SceneInitialize(void);

//フェードインシーン
void SceneFadeIn(void);

//フェードアウトシーン
void SceneFadeOut(void);

//フェードイン演出
int FadeIn(float speed);

//フェードアウト演出
int FadeOut(float speed);


// グローバル変数の定義 ====================================================

//シーンの状態
int g_sceneState;

//画像
HGRP g_logoImage;


// 関数の定義 ==============================================================
//----------------------------------------------------------------------
//! @brief ロゴシーンの初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void InitializeLogo(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//最初のシーン
	g_sceneState = 0;

}



//----------------------------------------------------------------------
//! @brief ロゴシーンの更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void UpdateLogo(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//シーンの切り替え
	switch (g_sceneState)
	{
	case 0:
		SceneInitialize();	//初期化
		break;
	case 1:
		SceneFadeIn();	//フェードイン
		break;
	case 2:
		SceneFadeOut();	//フェードアウト
		break;
	default:
		ExitGame();	//ゲームを終了する
		break;
	}

}



//----------------------------------------------------------------------
//! @brief ロゴシーンの描画処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void RenderLogo(void)
{
	//ローカル変数の宣言//----------------------------------------------

	int x1;
	int y1;
	int x2;
	int y2;


	//ローカル変数の初期化//--------------------------------------------

	x1 = (int)((float)SCREEN_CENTER_X - (float)IMAGE_SIZE_WIDTH*IMAGE_EXTEND);
	y1 = (int)((float)SCREEN_CENTER_Y - (float)IMAGE_SIZE_HEIGHT*IMAGE_EXTEND);
	x2 = (int)((float)SCREEN_CENTER_X + (float)IMAGE_SIZE_WIDTH*IMAGE_EXTEND);
	y2 = (int)((float)SCREEN_CENTER_Y + (float)IMAGE_SIZE_HEIGHT*IMAGE_EXTEND);


	//処理の内容//------------------------------------------------------

	//ロゴ画像の描画
	DrawExtendGraph(x1, y1, x2, y2, g_logoImage, TRUE);

}



//----------------------------------------------------------------------
//! @brief ロゴシーンの終了処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void FinalizeLogo(void)
{
	//ローカル変数の宣言//----------------------------------------------



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//画像データの削除
	InitGraph();
	//描画輝度をリセット
	SetDrawBright(255, 255, 255);



}



//----------------------------------------------------------------------
//! @brief シーンの初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void SceneInitialize(void)
{
	//ローカル変数の宣言//----------------------------------------------
	


	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//画像の読み込み
	g_logoImage = LoadGraph("Resources/Images/Fukakusa_Naoto_logo.png");

	//描画輝度の初期化
	SetDrawBright(0, 0, 0);

	//次のシーンへ
	g_sceneState = 1;	//フェードインシーンへ

}



//----------------------------------------------------------------------
//! @brief フェードインシーンの処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void SceneFadeIn(void)
{
	//ローカル変数の宣言//----------------------------------------------

	int result;


	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//フィードイン処理
	result = FadeIn(EFFECT_SPEED);

	//次のシーンへの移動
	if (result == 1)
	{
		g_sceneState = 2;	//フェードアウトシーンへ
	}

}


//----------------------------------------------------------------------
//! @brief フェードアウトシーンの処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void SceneFadeOut(void)
{
	//ローカル変数の宣言//----------------------------------------------

	int result;


	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	//フィードアウト処理
	result = FadeOut(EFFECT_SPEED);

	//次のシーンへの移動
	if (result == 1)
	{
		ChangeScene(SCENE_TITLE);	//タイトルシーンへ
	}

}



//----------------------------------------------------------------------
//! @brief フィードイン演出処理
//!
//! @param[speed] 演出の速さ
//!
//! @return 1 完了 
//----------------------------------------------------------------------
int FadeIn(float speed)
{
	//ローカル変数の宣言//----------------------------------------------

	static float i = 0.0f;


	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	if (i <= 255)
	{
		i += speed;
	}
	else
	{
		//フェードイン終了
		return 1;
	}

	// 描画輝度をセット
	SetDrawBright((int)i, (int)i, (int)i);

	return 0;
}



//----------------------------------------------------------------------
//! @brief フィードアウト演出処理
//!
//! @param[speed] 演出の速さ
//!
//! @return 1 完了
//----------------------------------------------------------------------
int FadeOut(float speed)
{
	//ローカル変数の宣言//----------------------------------------------

	static float i = 255.0f;



	//ローカル変数の初期化//--------------------------------------------



	//処理の内容//------------------------------------------------------

	if (i >= 0)
	{
		i -= speed;
	}
	else
	{
		return 1;
	}

	// 描画輝度をセット
	SetDrawBright((int)i, (int)i, (int)i);

	return 0;
}
